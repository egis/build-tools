version: 2
jobs:
  build:
    working_directory: ~/build-tools
    docker:
      - image: egis/build-slave
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: pre-deps
          command: |
            node --version
            npm --version
            npm install yarn@1.5.1
            ./node_modules/.bin/yarn config set cache-folder ~/.cache/yarn
            if [ "${NPM_TOKEN}" == "" ]; then rm .npmrc; fi
            ./scripts/install-npm-retry.sh
      - run:
          name: install-deps
          command: |
            npm run setup
            if [ "${NPM_TOKEN}" != "" ]; then
              ./scripts/install-dont-break.sh
              ./node_modules/@egis/egis-ui-test-utils/scripts/update-chrome-ci.sh
            fi
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn
            - yarn.lock
      - run:
          name: post-deps
          command: |
            mkdir ci-artifacts
            grep "version\"\:" node_modules/*/*/package.json > ci-artifacts/npm_versions.txt
            grep "version\"\:" node_modules/*/package.json >> ci-artifacts/npm_versions.txt
            grep "version\"\:" node_modules/*/*/*/package.json >> ci-artifacts/npm_versions.txt
            cp yarn.lock ci-artifacts/
      - store_artifacts:
          path: ci-artifacts/
      - run:
          name: test
          command: |
            npm test
            ./scripts/merge-build-tools-deps.js && git checkout -- package.json
            if [ "${NPM_TOKEN}" != "" ]; then
              cp -f .npmrc ~
              dont-break --timeout 600
            fi
      - run:
          name: deploy
          command: |
            if [ "${CIRCLE_USERNAME}" == "egis" ] && [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run semantic-release || true
            fi
